<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.seahorse.youliao.dao.SysUserJobDao">
    <resultMap id="BaseResultMap" type="com.seahorse.youliao.dao.entity.SysUserJobDO">
        <result property="jobId" column="job_id"/>
        <result property="userId" column="user_id"/>
    </resultMap>
    
    
    <!-- 批量新增 主键命名为id-->
    <insert id="insert" parameterType="com.seahorse.youliao.dao.entity.SysUserJobDO" useGeneratedKeys="true" keyProperty="job_id">
		insert into sys_user_job(
		    job_id,
		    user_id
		)VALUES(
			#{jobId},
			#{userId}
	    )
	</insert>
	
	<!-- 批量新增-->
	<insert id="insertInBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="job_id">
		insert into sys_user_job(
		   job_id,
		   user_id
		) values
		<foreach collection="list" item="item" separator=",">
		(
			#{item.jobId},
			#{item.userId}
		)
		</foreach>
	</insert>
	
	<sql id="update_sql">
        <set>
			<if test="jobId != null">
	    		job_id= #{jobId},
			</if>
			<if test="userId != null">
	    		user_id= #{userId},
			</if>
        </set>
    </sql>
    
    <!--通用更新(请谨慎使用, 防止全表更新) -->
    <update id="update" parameterType="com.seahorse.youliao.dao.entity.SysUserJobDO">
        UPDATE sys_user_job
        <include refid="update_sql"/>
        where job_id = #{jobId}
    </update>

    <sql id="updateInBatch_sql">
        <set>
			<if test="entity.jobId != null">
				job_id= #{entity.jobId},
	        </if>
			<if test="entity.userId != null">
				user_id= #{entity.userId},
	        </if>
        </set>
    </sql>

	<update id="updateInBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			update sys_user_job
            <include refid="updateInBatch_sql"/>
			where job_id = #{item.jobId};
		</foreach>
    </update>
    
    <!--根据传入对象进行删除 慎用-->
    <delete id="delete" parameterType="com.seahorse.youliao.dao.entity.SysUserJobDO">
		delete from sys_user_job
		<include refid="where_condition"/>
	</delete>
	
	<!-- 根据主键进行删除-->
    <delete id="deleteByIds" parameterType="java.util.List">
		delete from sys_user_job where job_id in  
		<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<sql id="columns">
		job_id,
		user_id
	</sql>
	
	<sql id="where_condition">
        <where>
			<if test="jobId != null">
        		and job_id=#{jobId}
    		</if>
			<if test="userId != null">
        		and user_id=#{userId}
    		</if>
        </where>
    </sql>

	<!--根据对象查询列表-->
	<select id="getList" resultMap="BaseResultMap" parameterType="com.seahorse.youliao.dao.entity.SysUserJobDO">
        SELECT
        <include refid="columns"/>
		FROM sys_user_job
	    <include refid="where_condition"/>
    </select>

    <!--根据对象查询单个对象-->
    <select id="get" resultMap="BaseResultMap" parameterType="com.seahorse.youliao.dao.entity.SysUserJobDO">
        SELECT
        <include refid="columns"/>
		FROM sys_user_job
	    <include refid="where_condition"/>
    </select>

    <!--根据主键查询单个对象-->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="columns"/>
		FROM sys_user_job
	    where job_id = #{jobId}
    </select>

    <!--根据主键集合查询单个对象-->
    <select id="getListByIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        <include refid="columns"/>
        FROM sys_user_job
        where job_id in
        <foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
        </foreach>
    </select>

    <select id="getListByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="columns"/>
        FROM sys_user_job t
        <where>
			<if test="jobId != null">
                and job_id=#{jobId}
            </if>
			<if test="userId != null">
                and user_id=#{userId}
            </if>
        </where>
    </select>

</mapper>